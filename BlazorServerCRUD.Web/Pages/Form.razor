@using Microsoft.AspNetCore.Components.Web
@inject Services.IDepartmentService Service

@if (employee != null) {
    <EditForm Model="@employee" OnValidSubmit="@OnValidSubmit">
        <DataAnnotationsValidator />
        <div class="form-group">
            <label>Employee Name :</label>
            <div>
                <InputText @bind-Value="@employee.EmployeeName" class="form-control col-sm-3" />
                <ValidationMessage For="@(() => employee.EmployeeName)" />
            </div>
        </div>
        <div class="form-group ">
            <div>
                <label>Gender :</label>
                <div>
                    <InputSelect @bind-Value="@employee.Gender" class="form-control col-sm-3">
                    <option value="Select">--Select--</option>
                    <option value="Male">Male</option>
                    <option value="Female">Female</option>
                    <option value="Other">Other</option>
                    </InputSelect>
                    <ValidationMessage For="@(() => employee.Gender)" />
                </div>
            </div>
        </div>
        <div class="form-group ">
            <div>
                <label>DOB :</label>
                <div>
                    <InputDate @bind-Value="@employee.DateOfBirth" class="form-control col-sm-3" />
                    <ValidationMessage For="@(() => employee.DateOfBirth)" />
                </div>
            </div>
        </div>
        <div class="form-group ">
            <div>
                <label>Department :</label>
                    <div>
                        <select @bind="@employee.DepartmentId" class="form-control col-sm-3">
                        <option value=0>--Select--</option>
                        @if (departments != null) {
                            @foreach(var department in departments)
                            {
                                <option value="@department.DepartmentId">@department.DepartmentName</option>
                            }
                        }
                        </select>
                        <ValidationMessage For="@(() => employee.DepartmentId)" />
                    </div>
            </div>
        </div>
        <button type="submit" class="btn btn-success">
            @ButtonText
        </button>
    </EditForm>
}
@code {
    [Parameter]
    public Models.Employee employee { get; set; }
    [Parameter]
    public string ButtonText { get; set; } = "Save";
    [Parameter]
    public EventCallback OnValidSubmit { get; set; }

    private IEnumerable<Models.Department> departments;

    protected override async Task OnInitializedAsync()
    {
        departments = await Service.GetDepartments();
    }
}
